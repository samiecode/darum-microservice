apiVersion: apps/v1
kind: Deployment
metadata:
    name: discovery-service
    namespace: darum-staging
spec:
    replicas: 2
    selector:
        matchLabels:
            app: discovery-service
            version: blue
    template:
        metadata:
            labels:
                app: discovery-service
                version: blue
        spec:
            containers:
                - name: discovery-service
                  image: ghcr.io/your-org/discovery-service:latest
                  ports:
                      - containerPort: 8761
                  env:
                      - name: SPRING_PROFILES_ACTIVE
                        value: "k8s"
                  livenessProbe:
                      httpGet:
                          path: /actuator/health/liveness
                          port: 8761
                      initialDelaySeconds: 60
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /actuator/health/readiness
                          port: 8761
                      initialDelaySeconds: 30
                      periodSeconds: 5
                  resources:
                      requests:
                          memory: "512Mi"
                          cpu: "250m"
                      limits:
                          memory: "1Gi"
                          cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
    name: discovery-service
    namespace: darum-staging
spec:
    selector:
        app: discovery-service
    ports:
        - port: 8761
          targetPort: 8761
    type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: config-server
    namespace: darum-staging
spec:
    replicas: 2
    selector:
        matchLabels:
            app: config-server
            version: blue
    template:
        metadata:
            labels:
                app: config-server
                version: blue
        spec:
            containers:
                - name: config-server
                  image: ghcr.io/your-org/config-server:latest
                  ports:
                      - containerPort: 8888
                  env:
                      - name: SPRING_PROFILES_ACTIVE
                        value: "k8s"
                      - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
                        value: "http://discovery-service:8761/eureka/"
                  livenessProbe:
                      httpGet:
                          path: /actuator/health/liveness
                          port: 8888
                      initialDelaySeconds: 60
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /actuator/health/readiness
                          port: 8888
                      initialDelaySeconds: 30
                      periodSeconds: 5
                  resources:
                      requests:
                          memory: "512Mi"
                          cpu: "250m"
                      limits:
                          memory: "1Gi"
                          cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
    name: config-server
    namespace: darum-staging
spec:
    selector:
        app: config-server
    ports:
        - port: 8888
          targetPort: 8888
    type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: auth-service
    namespace: darum-staging
spec:
    replicas: 3
    selector:
        matchLabels:
            app: auth-service
            version: blue
    template:
        metadata:
            labels:
                app: auth-service
                version: blue
        spec:
            containers:
                - name: auth-service
                  image: ghcr.io/your-org/auth-service:latest
                  ports:
                      - containerPort: 8080
                  env:
                      - name: SPRING_PROFILES_ACTIVE
                        value: "k8s"
                      - name: SPRING_DATASOURCE_URL
                        value: "jdbc:postgresql://postgres-auth:5432/auth_db"
                      - name: SPRING_DATASOURCE_USERNAME
                        valueFrom:
                            configMapKeyRef:
                                name: postgres-config
                                key: POSTGRES_USER
                      - name: SPRING_DATASOURCE_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: postgres-secret
                                key: POSTGRES_PASSWORD
                      - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
                        value: "http://discovery-service:8761/eureka/"
                      - name: SPRING_CONFIG_IMPORT
                        value: "optional:configserver:http://config-server:8888"
                  livenessProbe:
                      httpGet:
                          path: /actuator/health/liveness
                          port: 8080
                      initialDelaySeconds: 90
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /actuator/health/readiness
                          port: 8080
                      initialDelaySeconds: 60
                      periodSeconds: 5
                  resources:
                      requests:
                          memory: "768Mi"
                          cpu: "500m"
                      limits:
                          memory: "1.5Gi"
                          cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
    name: auth-service
    namespace: darum-staging
spec:
    selector:
        app: auth-service
    ports:
        - port: 8080
          targetPort: 8080
    type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: employee-service
    namespace: darum-staging
spec:
    replicas: 3
    selector:
        matchLabels:
            app: employee-service
            version: blue
    template:
        metadata:
            labels:
                app: employee-service
                version: blue
        spec:
            containers:
                - name: employee-service
                  image: ghcr.io/your-org/employee-service:latest
                  ports:
                      - containerPort: 8080
                  env:
                      - name: SPRING_PROFILES_ACTIVE
                        value: "k8s"
                      - name: SPRING_DATASOURCE_URL
                        value: "jdbc:postgresql://postgres-employee:5432/employee_db"
                      - name: SPRING_DATASOURCE_USERNAME
                        valueFrom:
                            configMapKeyRef:
                                name: postgres-config
                                key: POSTGRES_USER
                      - name: SPRING_DATASOURCE_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: postgres-secret
                                key: POSTGRES_PASSWORD
                      - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
                        value: "http://discovery-service:8761/eureka/"
                      - name: SPRING_CONFIG_IMPORT
                        value: "optional:configserver:http://config-server:8888"
                  livenessProbe:
                      httpGet:
                          path: /actuator/health/liveness
                          port: 8080
                      initialDelaySeconds: 90
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /actuator/health/readiness
                          port: 8080
                      initialDelaySeconds: 60
                      periodSeconds: 5
                  resources:
                      requests:
                          memory: "768Mi"
                          cpu: "500m"
                      limits:
                          memory: "1.5Gi"
                          cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
    name: employee-service
    namespace: darum-staging
spec:
    selector:
        app: employee-service
    ports:
        - port: 8080
          targetPort: 8080
    type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: api-gateway
    namespace: darum-staging
spec:
    replicas: 3
    selector:
        matchLabels:
            app: api-gateway
            version: blue
    template:
        metadata:
            labels:
                app: api-gateway
                version: blue
        spec:
            containers:
                - name: api-gateway
                  image: ghcr.io/your-org/api-gateway:latest
                  ports:
                      - containerPort: 8080
                  env:
                      - name: SPRING_PROFILES_ACTIVE
                        value: "k8s"
                      - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
                        value: "http://discovery-service:8761/eureka/"
                  livenessProbe:
                      httpGet:
                          path: /actuator/health/liveness
                          port: 8080
                      initialDelaySeconds: 90
                      periodSeconds: 10
                  readinessProbe:
                      httpGet:
                          path: /actuator/health/readiness
                          port: 8080
                      initialDelaySeconds: 60
                      periodSeconds: 5
                  resources:
                      requests:
                          memory: "512Mi"
                          cpu: "500m"
                      limits:
                          memory: "1Gi"
                          cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
    name: api-gateway
    namespace: darum-staging
spec:
    selector:
        app: api-gateway
    ports:
        - port: 80
          targetPort: 8080
    type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: darum-ingress
    namespace: darum-staging
    annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
    tls:
        - hosts:
              - staging.darum.com
          secretName: darum-tls
    rules:
        - host: staging.darum.com
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: api-gateway
                            port:
                                number: 80
