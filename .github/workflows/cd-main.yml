name: CD - Deploy to Production

on:
    push:
        branches:
            - main
        paths-ignore:
            - "**.md"
            - ".gitignore"
            - "LICENSE"
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_TAG: ${{ github.sha }}

jobs:
    build-shared:
        name: Build Shared Domain
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"
                  cache: "maven"

            - name: Build and install shared-domain
              run: |
                  cd shared-domain
                  mvn clean install -DskipTests

            - name: Cache shared-domain artifacts
              uses: actions/cache/save@v3
              with:
                  path: ~/.m2/repository/com/darum/shared-domain
                  key: shared-domain-${{ github.sha }}

    build-and-push:
        name: Build and Push Docker Images
        runs-on: ubuntu-latest
        needs: build-shared
        permissions:
            contents: read
            packages: write

        strategy:
            matrix:
                service:
                    - discovery-service
                    - config-server
                    - api-gateway
                    - auth-service
                    - employee-service

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"
                  cache: "maven"

            - name: Restore shared-domain from cache
              uses: actions/cache/restore@v3
              with:
                  path: ~/.m2/repository/com/darum/shared-domain
                  key: shared-domain-${{ github.sha }}

            - name: Build ${{ matrix.service }}
              run: mvn clean package -DskipTests -pl ${{ matrix.service }} -am

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}
                  tags: |
                      type=sha,prefix={{branch}}-
                      type=ref,event=branch
                      type=semver,pattern={{version}}
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./${{ matrix.service }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64,linux/arm64
